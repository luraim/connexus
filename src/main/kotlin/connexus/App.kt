/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package connexus

import connexus.wiki.Wiki
import io.ktor.application.*
import io.ktor.html.*
import io.ktor.features.*
import io.ktor.http.content.*
import io.ktor.response.respondRedirect
import io.ktor.routing.*
import io.ktor.server.engine.embeddedServer
import io.ktor.server.netty.Netty
import kotlinx.html.*
import java.io.File


fun main(args: Array<String>) {

    if (args.count() != 2) {
        println("please provide root folder and home page title")
        return
    }

    val rootFolder = File(args[0].replaceFirst("^~".toRegex(),
            System.getProperty("user.home")))

    val wiki = Wiki(rootFolder = rootFolder, homeTopic = args[1])

    val server = embeddedServer(Netty, port = 8080) {
        install(DefaultHeaders)
        install(CallLogging)
        routing {
            routeResources()
            routeFileSystem(wiki)
        }
    }
    server.start(wait = true)
}

fun Route.routeFileSystem(wiki: Wiki) {
    get("/") {
        call.respondRedirect("/view/${wiki.homeTopic}")
    }
    get("/view/{path...}") {
        val path = call.parameters["path"] ?: return@get
        call.respondHtml {
            head {
                title {
                    +path
                }
                meta(charset = "utf-8")
                link(rel = "stylesheet",
                        type = "text/css",
                        href = "/static/style.css")
            }
            body {
                val content = wiki.loadPage(path)
                unsafe {
                    +content
                }
            }
        }
    }
}

fun Route.routeResources() {
    static {
        static("static") {
            resources("static")
        }
    }
}

fun main() {
    val home = System.getProperty("user.home")
    val wikiDir = File("$home/tmp/testwiki")
    val input = wikiDir.resolve("full-feature-testing.md")
    val contents = input.readText()

    val wiki = Wiki(wikiDir, "test1.md")
    wiki.renderToFile(contents, "test.html")

}
